// Mocks generated by Mockito 5.4.4 from annotations
// in jitta_ranking/test/explore_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:graphql_flutter/graphql_flutter.dart' as _i2;
import 'package:jitta_ranking/feature/explore/data/remote_data_source.dart'
    as _i4;
import 'package:jitta_ranking/feature/explore/domain/entities/country/country.dart'
    as _i6;
import 'package:jitta_ranking/feature/explore/domain/entities/ranking/stock_ranking.dart'
    as _i7;
import 'package:jitta_ranking/feature/explore/domain/entities/stock/stock_detail.dart'
    as _i3;
import 'package:jitta_ranking/feature/explore/domain/usecases/fetch_ranking_usecase.dart'
    as _i8;
import 'package:jitta_ranking/feature/explore/domain/usecases/fetch_stock_usecase.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGraphQLClient_0 extends _i1.SmartFake implements _i2.GraphQLClient {
  _FakeGraphQLClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStockDetail_1 extends _i1.SmartFake implements _i3.StockDetail {
  _FakeStockDetail_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ExploreDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockExploreDataSource extends _i1.Mock implements _i4.ExploreDataSource {
  MockExploreDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GraphQLClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeGraphQLClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.GraphQLClient);

  @override
  _i5.Future<List<_i6.Country>> fetchCountry() => (super.noSuchMethod(
        Invocation.method(
          #fetchCountry,
          [],
        ),
        returnValue: _i5.Future<List<_i6.Country>>.value(<_i6.Country>[]),
      ) as _i5.Future<List<_i6.Country>>);

  @override
  _i5.Future<List<_i7.StockRanking>> fetchStockRacking(
          _i8.FetchRankingParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchStockRacking,
          [params],
        ),
        returnValue:
            _i5.Future<List<_i7.StockRanking>>.value(<_i7.StockRanking>[]),
      ) as _i5.Future<List<_i7.StockRanking>>);

  @override
  _i5.Future<_i3.StockDetail> fetchStockDetail(_i9.FetchStockParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchStockDetail,
          [params],
        ),
        returnValue: _i5.Future<_i3.StockDetail>.value(_FakeStockDetail_1(
          this,
          Invocation.method(
            #fetchStockDetail,
            [params],
          ),
        )),
      ) as _i5.Future<_i3.StockDetail>);
}
